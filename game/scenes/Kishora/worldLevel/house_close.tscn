[gd_scene load_steps=4 format=3 uid="uid://lq1yeiasdkfb"]

[sub_resource type="PrismMesh" id="PrismMesh_5eu0o"]
size = Vector3(160, 90, 1)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_cti2x"]
data = PackedVector3Array(0, 45, 0.5, 80, -45, 0.5, -80, -45, 0.5, 0, 45, -0.5, -80, -45, -0.5, 80, -45, -0.5, 0, 45, 0.5, 0, 45, -0.5, 80, -45, 0.5, 0, 45, -0.5, 80, -45, -0.5, 80, -45, 0.5, 0, 45, -0.5, 0, 45, 0.5, -80, -45, -0.5, 0, 45, 0.5, -80, -45, 0.5, -80, -45, -0.5, -80, -45, 0.5, 80, -45, 0.5, -80, -45, -0.5, 80, -45, 0.5, 80, -45, -0.5, -80, -45, -0.5)

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_rn357"]
data = PackedVector3Array(0, 45, 0.5, 80, -45, 0.5, -80, -45, 0.5, 0, 45, -0.5, -80, -45, -0.5, 80, -45, -0.5, 0, 45, 0.5, 0, 45, -0.5, 80, -45, 0.5, 0, 45, -0.5, 80, -45, -0.5, 80, -45, 0.5, 0, 45, -0.5, 0, 45, 0.5, -80, -45, -0.5, 0, 45, 0.5, -80, -45, 0.5, -80, -45, -0.5, -80, -45, 0.5, 80, -45, 0.5, -80, -45, -0.5, 80, -45, 0.5, 80, -45, -0.5, -80, -45, -0.5)

[node name="HouseClose" type="Node3D"]

[node name="MeshInstance3D4" type="MeshInstance3D" parent="."]
transform = Transform3D(0.999999, 0, -0.00167548, 0, 1, 0, 0.00167548, 0, 0.999999, 1.28756, 68.0206, 63.6868)
mesh = SubResource("PrismMesh_5eu0o")
skeleton = NodePath("../..")

[node name="StaticBody3D" type="StaticBody3D" parent="MeshInstance3D4"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshInstance3D4/StaticBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0)
shape = SubResource("ConcavePolygonShape3D_cti2x")

[node name="MeshInstance3D5" type="MeshInstance3D" parent="."]
transform = Transform3D(0.999999, 0, -0.00167548, 0, 1, 0, 0.00167548, 0, 0.999999, -0.555947, 68.0206, -63.8678)
mesh = SubResource("PrismMesh_5eu0o")
skeleton = NodePath("../..")

[node name="StaticBody3D" type="StaticBody3D" parent="MeshInstance3D5"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshInstance3D5/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_rn357")
